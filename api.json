{
  "openapi": "3.0.1",
  "info": {
    "title": "회원 관리 서비스 API",
    "description": "Spring Boot + JWT 기반 회원관리 API 문서입니다.",
    "version": "v1.0"
  },
  "servers": [
    {
      "url": "http://3.39.233.161",
      "description": "Generated server url"
    }
  ],
  "security": [
    {
      "JWT": [],
      "ReauthToken": []
    }
  ],
  "tags": [
    {
      "name": "프론트 미구현 API",
      "description": "사용되지 않는 API 모음입니다."
    },
    {
      "name": "회원 API",
      "description": "일반 회원 기능 관련 API입니다."
    },
    {
      "name": "인증 API",
      "description": "회원가입, 로그인, 인증 관련 API입니다."
    },
    {
      "name": "관리자 API",
      "description": "관리자 전용 API입니다."
    }
  ],
  "paths": {
    "/api/users/password/verify": {
      "post": {
        "tags": [
          "회원 API"
        ],
        "summary": "비밀번호 재인증",
        "description": "민감한 작업(이메일 변경, 회원 탈퇴 등)을 수행하기 전, 사용자의 비밀번호를 검증하고 재인증 토큰(reauthToken)을 발급합니다.",
        "operationId": "verifyPassword",
        "requestBody": {
          "description": "비밀번호 입력 DTO",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordVerifyRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDtoReauthResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "AccessToken": []
          }
        ]
      }
    },
    "/api/signout": {
      "post": {
        "tags": [
          "인증 API"
        ],
        "summary": "사용자 로그아웃",
        "description": "AccessToken 검증 후 RefreshToken을 삭제하고, 쿠키도 만료시킵니다.",
        "operationId": "logout",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDtoVoid"
                }
              }
            }
          }
        },
        "security": [
          {
            "AccessToken": []
          }
        ]
      }
    },
    "/api/auth/token/refresh": {
      "post": {
        "tags": [
          "인증 API"
        ],
        "summary": "토큰 재발급",
        "description": "쿠키에 담긴 RefreshToken을 사용하여 AccessToken을 재발급합니다.",
        "operationId": "refreshToken",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDtoRefreshTokenDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/signup": {
      "post": {
        "tags": [
          "인증 API"
        ],
        "summary": "회원가입",
        "description": "이메일, 비밀번호, 사용자 이름 등의 정보를 입력받아 회원가입을 처리합니다.회원가입 전 반드시 휴대폰 인증을 완료해야 하며, 이메일 인증 링크도 함께 발송됩니다.",
        "operationId": "signup",
        "requestBody": {
          "description": "회원가입 요청 데이터",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDtoVoid"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/signin": {
      "post": {
        "tags": [
          "인증 API"
        ],
        "summary": "사용자 로그인",
        "description": "이메일과 비밀번호를 통해 로그인합니다. AccessToken은 응답 바디에, RefreshToken은 쿠키에 저장됩니다.",
        "operationId": "login",
        "requestBody": {
          "description": "로그인 요청 정보 (이메일, 비밀번호)",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDtoLoginResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/phone/verify": {
      "post": {
        "tags": [
          "인증 API"
        ],
        "summary": "휴대폰 인증번호 확인",
        "description": "입력한 전화번호와 인증번호를 비교하여 인증을 완료합니다.",
        "operationId": "verifyCode",
        "requestBody": {
          "description": "휴대폰 번호 + 인증번호 입력 DTO",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneVerifyCodeRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDtoVoid"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/phone/send": {
      "post": {
        "tags": [
          "인증 API"
        ],
        "summary": "휴대폰 인증번호 발송",
        "description": "입력한 전화번호로 인증번호를 문자로 발송합니다.",
        "operationId": "sendCode",
        "requestBody": {
          "description": "전화번호 입력 DTO",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneVerifyRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDtoVoid"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/find/password": {
      "post": {
        "tags": [
          "인증 API"
        ],
        "summary": "비밀번호 재설정",
        "description": "이메일과 이름, 전화번호를 통해 본인 확인 후 임시 비밀번호를 이메일로 발송합니다.",
        "operationId": "resetPassword",
        "requestBody": {
          "description": "이름, 이메일, 전화번호",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FindPasswordRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDtoVoid"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/find/email": {
      "post": {
        "tags": [
          "인증 API"
        ],
        "summary": "이메일(아이디) 찾기",
        "description": "이름과 전화번호를 기반으로 등록된 이메일을 조회합니다.",
        "operationId": "findEmail",
        "requestBody": {
          "description": "이름과 전화번호",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FindEmailRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDtoFindEmailResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/email": {
      "post": {
        "tags": [
          "인증 API"
        ],
        "summary": "이메일 중복 확인",
        "description": "입력한 이메일이 이미 가입된 이메일인지 확인합니다.",
        "operationId": "checkEmailDuplicate",
        "requestBody": {
          "description": "이메일 중복 확인 요청",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailCheckRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDtoVoid"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/admin/signin": {
      "post": {
        "tags": [
          "관리자 API"
        ],
        "summary": "관리자 로그인",
        "description": "관리자가 이메일과 비밀번호로 로그인하면 AccessToken은 바디로, RefreshToken은 쿠키로 발급됩니다.",
        "operationId": "login_1",
        "requestBody": {
          "description": "로그인 요청 DTO (이메일, 비밀번호)",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDtoLoginResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/signout": {
      "post": {
        "tags": [
          "관리자 API"
        ],
        "summary": "관리자 로그아웃",
        "description": "AccessToken을 검증하고, 저장된 RefreshToken을 삭제하며 쿠키도 만료시킵니다.",
        "operationId": "logout_1",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDtoVoid"
                }
              }
            }
          }
        },
        "security": [
          {
            "AccessToken": []
          }
        ]
      }
    },
    "/api/users/me/status": {
      "patch": {
        "tags": [
          "회원 API"
        ],
        "summary": "회원 상태 변경 (탈퇴 또는 복구)",
        "description": "reauthToken으로 인증된 사용자의 상태를 변경합니다.",
        "operationId": "updateMyStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDtoVoid"
                }
              }
            }
          }
        },
        "security": [
          {
            "ReauthToken": []
          }
        ]
      }
    },
    "/api/users/me/phone": {
      "patch": {
        "tags": [
          "회원 API"
        ],
        "summary": "전화번호 변경",
        "description": "인증된 전화번호로 사용자의 정보를 변경합니다.",
        "operationId": "updatePhoneNumber",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePhoneRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDtoVoid"
                }
              }
            }
          }
        },
        "security": [
          {
            "ReauthToken": []
          }
        ]
      }
    },
    "/api/users/me/password": {
      "patch": {
        "tags": [
          "회원 API"
        ],
        "summary": "비밀번호 변경",
        "description": "재인증 토큰(reauthToken)으로 인증된 사용자의 비밀번호를 변경합니다.",
        "operationId": "updatePassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePasswordRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDtoVoid"
                }
              }
            }
          }
        },
        "security": [
          {
            "ReauthToken": []
          }
        ]
      }
    },
    "/api/admin/users/status/{id}": {
      "patch": {
        "tags": [
          "관리자 API"
        ],
        "summary": "회원 상태 변경 (ADMIN)",
        "description": "관리자가 회원의 상태를 변경합니다. 'active' 또는 'deleted' 중 하나를 입력해야 합니다.",
        "operationId": "updateUserStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "회원 ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "description": "변경할 회원 상태 ('active' 또는 'deleted')",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDtoVoid"
                }
              }
            }
          }
        },
        "security": [
          {
            "AccessToken": []
          },
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/users/me": {
      "get": {
        "tags": [
          "회원 API"
        ],
        "summary": "내 프로필 조회",
        "description": "AccessToken을 기반으로 현재 로그인한 사용자의 프로필 정보를 조회합니다.",
        "operationId": "getMyProfile",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDtoMyProfileResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "AccessToken": []
          }
        ]
      }
    },
    "/api/auth/email/verify": {
      "get": {
        "tags": [
          "인증 API"
        ],
        "summary": "이메일 인증 처리",
        "description": "사용자가 이메일로 받은 인증 링크를 클릭하면 호출되는 API입니다. 이메일 인증 코드를 검증한 후 프론트엔드로 리디렉션됩니다.",
        "operationId": "verifyEmail",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "이메일 인증 코드",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "a1b2c3d4e5"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDtoString"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/users": {
      "get": {
        "tags": [
          "프론트 미구현 API"
        ],
        "summary": "전체 회원 조회",
        "description": "가입된 전체 회원 목록을 페이징, 정렬 기준에 따라 조회합니다.",
        "operationId": "getAllMembers",
        "parameters": [
          {
            "name": "pageNum",
            "in": "query",
            "description": "페이지 번호",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            },
            "example": 1
          },
          {
            "name": "pageLimit",
            "in": "query",
            "description": "한 페이지당 회원 수",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            },
            "example": 10
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "정렬 기준 컬럼명",
            "required": false,
            "schema": {
              "type": "string",
              "default": "createdAt"
            },
            "example": "createdAt"
          },
          {
            "name": "sortDir",
            "in": "query",
            "description": "정렬 방향 (asc 또는 desc)",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc"
            },
            "example": "desc"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDtoMemberListResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "AccessToken": []
          },
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/admin/users/{id}": {
      "get": {
        "tags": [
          "관리자 API"
        ],
        "summary": "회원 상세 정보 조회",
        "description": "회원 ID를 기반으로 해당 사용자의 상세 정보를 조회합니다.",
        "operationId": "getMemberDetail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "회원 ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDtoMemberDetailResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "AccessToken": []
          },
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/admin/users/unverified": {
      "get": {
        "tags": [
          "프론트 미구현 API"
        ],
        "summary": "이메일 미인증 회원 조회",
        "description": "이메일 인증이 완료되지 않은 회원 목록을 조회합니다.",
        "operationId": "getUnverifiedEmailMembers",
        "parameters": [
          {
            "name": "pageNum",
            "in": "query",
            "description": "페이지 번호",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            },
            "example": 1
          },
          {
            "name": "pageLimit",
            "in": "query",
            "description": "한 페이지당 회원 수",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            },
            "example": 10
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "정렬 기준 컬럼명",
            "required": false,
            "schema": {
              "type": "string",
              "default": "createdAt"
            },
            "example": "createdAt"
          },
          {
            "name": "sortDir",
            "in": "query",
            "description": "정렬 방향 (asc 또는 desc)",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc"
            },
            "example": "desc"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDtoMemberListResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "AccessToken": []
          },
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/admin/users/search": {
      "get": {
        "tags": [
          "관리자 API"
        ],
        "summary": "회원 검색",
        "description": "회원의 이메일 또는 사용자 이름으로 검색합니다. 두 항목을 동시에 사용할 수 없습니다.",
        "operationId": "searchMembers",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "이메일로 검색 (username과 동시 사용 불가)",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "user@example.com"
          },
          {
            "name": "username",
            "in": "query",
            "description": "사용자 이름으로 검색 (email과 동시 사용 불가)",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "홍길동"
          },
          {
            "name": "pageNum",
            "in": "query",
            "description": "페이지 번호",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            },
            "example": 1
          },
          {
            "name": "pageLimit",
            "in": "query",
            "description": "한 페이지당 회원 수",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            },
            "example": 10
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "정렬 기준 컬럼명",
            "required": false,
            "schema": {
              "type": "string",
              "default": "createdAt"
            },
            "example": "createdAt"
          },
          {
            "name": "sortDir",
            "in": "query",
            "description": "정렬 방향 (asc 또는 desc)",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc"
            },
            "example": "desc"
          },
          {
            "name": "emailVerified",
            "in": "query",
            "description": "이메일 인증 여부 (true/false)",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "status",
            "in": "query",
            "description": "회원 상태 (active/deleted)",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "active"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDtoMemberListResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "AccessToken": []
          },
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/admin/users/deleted": {
      "get": {
        "tags": [
          "프론트 미구현 API"
        ],
        "summary": "탈퇴 회원 조회",
        "description": "삭제(deleted) 상태인 회원 목록을 조회합니다.",
        "operationId": "getDeletedMembers",
        "parameters": [
          {
            "name": "pageNum",
            "in": "query",
            "description": "페이지 번호",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            },
            "example": 1
          },
          {
            "name": "pageLimit",
            "in": "query",
            "description": "한 페이지당 회원 수",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            },
            "example": 10
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "정렬 기준 컬럼명",
            "required": false,
            "schema": {
              "type": "string",
              "default": "createdAt"
            },
            "example": "createdAt"
          },
          {
            "name": "sortDir",
            "in": "query",
            "description": "정렬 방향 (asc 또는 desc)",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc"
            },
            "example": "desc"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDtoMemberListResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "AccessToken": []
          },
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/admin/users/dashboard": {
      "get": {
        "tags": [
          "관리자 API"
        ],
        "summary": "대시보드 조회",
        "description": "전체 회원, 탈퇴 회원 수를 포함한 관리자용 대시보드 데이터를 조회합니다.",
        "operationId": "getDashboard",
        "parameters": [
          {
            "name": "pageNum",
            "in": "query",
            "description": "페이지 번호",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            },
            "example": 1
          },
          {
            "name": "pageLimit",
            "in": "query",
            "description": "한 페이지당 회원 수",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            },
            "example": 10
          },
          {
            "name": "emailVerified",
            "in": "query",
            "description": "이메일 인증 여부 (true/false)",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "status",
            "in": "query",
            "description": "회원 상태 (active/deleted)",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "active"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDtoDashboardResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "AccessToken": []
          },
          {
            "JWT": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "PasswordVerifyRequestDto": {
        "required": [
          "password"
        ],
        "type": "object",
        "properties": {
          "password": {
            "maxLength": 2147483647,
            "minLength": 8,
            "type": "string"
          }
        }
      },
      "ApiResponseDtoReauthResponseDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/ReauthResponseDto"
          }
        }
      },
      "ReauthResponseDto": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean"
          },
          "reauthToken": {
            "type": "string"
          }
        }
      },
      "ApiResponseDtoVoid": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object"
          }
        }
      },
      "ApiResponseDtoRefreshTokenDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/RefreshTokenDto"
          }
        }
      },
      "RefreshTokenDto": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          }
        }
      },
      "SignupRequestDto": {
        "required": [
          "code",
          "email",
          "password",
          "passwordCheck",
          "phoneNumber",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "maxLength": 2147483647,
            "minLength": 8,
            "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$",
            "type": "string"
          },
          "passwordCheck": {
            "type": "string"
          },
          "phoneNumber": {
            "pattern": "^010\\d{8}$",
            "type": "string"
          },
          "code": {
            "pattern": "^\\d{6}$",
            "type": "string"
          },
          "passwordMatching": {
            "type": "boolean"
          }
        }
      },
      "LoginRequestDto": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "ApiResponseDtoLoginResponseDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/LoginResponseDto"
          }
        }
      },
      "LoginResponseDto": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/LoginUserDto"
          }
        }
      },
      "LoginUserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PhoneVerifyCodeRequestDto": {
        "required": [
          "code",
          "phoneNumber"
        ],
        "type": "object",
        "properties": {
          "phoneNumber": {
            "pattern": "^010\\d{8}$",
            "type": "string"
          },
          "code": {
            "pattern": "^\\d{6}$",
            "type": "string"
          }
        }
      },
      "PhoneVerifyRequestDto": {
        "required": [
          "phoneNumber"
        ],
        "type": "object",
        "properties": {
          "phoneNumber": {
            "pattern": "^010\\d{8}$",
            "type": "string"
          }
        }
      },
      "FindPasswordRequestDto": {
        "required": [
          "code",
          "email",
          "phoneNumber",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phoneNumber": {
            "pattern": "^010\\d{8}$",
            "type": "string"
          },
          "code": {
            "pattern": "^\\d{6}$",
            "type": "string"
          }
        }
      },
      "FindEmailRequestDto": {
        "required": [
          "code",
          "phoneNumber",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "phoneNumber": {
            "pattern": "^010\\d{8}$",
            "type": "string"
          },
          "code": {
            "pattern": "^\\d{6}$",
            "type": "string"
          }
        }
      },
      "ApiResponseDtoFindEmailResponseDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/FindEmailResponseDto"
          }
        }
      },
      "FindEmailResponseDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "EmailCheckRequestDto": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "UpdateStatusRequestDto": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "pattern": "^(active|deleted)$",
            "type": "string",
            "description": "회원 상태 값 (active 또는 deleted)",
            "example": "deleted",
            "enum": [
              "active",
              "deleted"
            ]
          }
        },
        "description": "회원 상태 변경 요청 DTO"
      },
      "UpdatePhoneRequestDto": {
        "required": [
          "phoneNumber"
        ],
        "type": "object",
        "properties": {
          "phoneNumber": {
            "pattern": "^010\\d{8}$",
            "type": "string"
          }
        }
      },
      "UpdatePasswordRequestDto": {
        "required": [
          "newPassword",
          "newPasswordCheck"
        ],
        "type": "object",
        "properties": {
          "newPassword": {
            "maxLength": 2147483647,
            "minLength": 8,
            "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$",
            "type": "string"
          },
          "newPasswordCheck": {
            "type": "string"
          },
          "passwordMatching": {
            "type": "boolean"
          }
        }
      },
      "ApiResponseDtoMyProfileResponseDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/MyProfileResponseDto"
          }
        }
      },
      "MyProfileResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "ApiResponseDtoString": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "string"
          }
        }
      },
      "ApiResponseDtoMemberListResponseDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/MemberListResponseDto"
          }
        }
      },
      "MemberListResponseDto": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberResponseDto"
            }
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageLimit": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "MemberResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "emailVerified": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ApiResponseDtoMemberDetailResponseDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/MemberDetailResponseDto"
          }
        }
      },
      "MemberDetailResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "ApiResponseDtoDashboardResponseDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/DashboardResponseDto"
          }
        }
      },
      "DashboardResponseDto": {
        "type": "object",
        "properties": {
          "sumUser": {
            "type": "integer",
            "format": "int64"
          },
          "deletedUser": {
            "type": "integer",
            "format": "int64"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberResponseDto"
            }
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageLimit": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          }
        }
      }
    },
    "securitySchemes": {
      "JWT": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "ReauthToken": {
        "type": "apiKey",
        "name": "reauthToken",
        "in": "header"
      }
    }
  }
}